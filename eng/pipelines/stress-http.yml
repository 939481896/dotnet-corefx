trigger: none

pool:
  name: Hosted Ubuntu 1604

variables:
  httpStressProject: src/System.Net.Http/tests/StressTests/HttpStress
  sdkBaseImage: sdk-corefx-current
  stressImage: httpstress

steps:
- checkout: self
  clean: true
  fetchDepth: 0
  lfs: false

- task: CmdLine@2
  displayName: Build Corefx
  inputs:
    script: |
      docker build -t $(sdkBaseImage) -f $(Build.SourcesDirectory)/$(HttpStressProject)/corefx.Dockerfile .

- task: CmdLine@2
  displayName: Build HttpStress
  inputs:
    script: |
      cd '$(Build.SourcesDirectory)/$(HttpStressProject)'
      docker build -t $(stressImage) --build-arg SDK_BASE_IMAGE=$(sdkBaseImage) .

- task: CmdLine@2
  displayName: Run HttpStress
  inputs:
    script: |
      docker run --rm -e STRESS_ARGS=$(HTTPSTRESS_ARGS) $(stressImage)

- task: PublishBuildArtifacts@1
  displayName: Publish Logs
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/artifacts/log/$(BUILD_CONFIGURATION)'
    PublishLocation: Container
    ArtifactName: 'httpstress_$(Agent.Os)_$(Agent.JobName)'
  continueOnError: true
  condition: always()